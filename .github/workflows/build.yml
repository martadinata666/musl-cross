name: Build MUSL cross

on:
  push:
    branches: 
      - "*"
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Manual run'

jobs:
  Build:
    runs-on: ubuntu-latest
    strategy:
       fail-fast: false
       matrix:
         target: [armv7l-linux-musleabihf-musl11,armv7l-linux-musleabihf,aarch64-linux-musl,x86_64-linux-musl]
         #target: [armv7l-linux-musleabihf]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Clone upstream
        run: git clone --depth=1 https://git.zv.io/toolchains/musl-cross-make.git musl-cross
      - name: Copy our config
        run: cp config.mak.${{ matrix.target }} musl-cross/config.mak
      - name: Build
        run: |
             cd musl-cross
             make -j$(nproc)
             make install
      - name: Listing and rename
        run: |
             ls -al
             ls -al musl-cross
             mv musl-cross/output musl-cross/${{ matrix.target }}
      - name: Compress ${{ matrix.target }}-cross
        run: |
             cd musl-cross
             tar -cvzf ${{ matrix.target }}-cross.tar.gz ${{ matrix.target }}
             ls -al

      - name: Upload ${{ matrix.target }}-cross artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}-cross.tar.gz
          path: musl-cross/${{ matrix.target }}-cross.tar.gz

  Create-release-artifacts:
     needs: [Build]
     name: Create release artifacts
     strategy:
       fail-fast: false
       matrix:
         target: [armv7l-linux-musleabihf-musl11,armv7l-linux-musleabihf,aarch64-linux-musl,x86_64-linux-musl]
         #target: [armv7l-linux-musleabihf]
     if: github.event_name == 'release'
     runs-on: ubuntu-latest
     permissions:
       contents: write
     steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
          name: ${{ matrix.target  }}.tar.gz

      - name: Upload compressed release
        uses: ncipollo/release-action@v1
        id: create_release
        with:
          allowUpdates: true
          artifacts: ${{ matrix.target  }}.tar.gz
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

